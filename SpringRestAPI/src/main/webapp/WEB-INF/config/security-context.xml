<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/spring-context-4.3.xsd
		http://www.springframework.org/schema/security/oauth2
		http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd">
		
	<!-- Definition of Authentication Server -->
	<sec:http pattern="/oauth/token"  create-session="stateless" authentication-manager-ref="clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
		<sec:intercept-url pattern="/oauth/token"  access="fullyAuthenticated"  method="GET"/>
		<csrf disabled="true"/>
		<sec:anonymous enabled="false"/>
		<sec:http-basic entry-point-ref="clientAuthenticationEntryPoint"/>
		<sec:custom-filter ref="clientCredentialsTokenEndpointFilter" after="BASIC_AUTH_FILTER"/>
		<sec:access-denied-handler ref="oauthAccessDeniedHandler"/>
	</sec:http>
		
	<!-- Protected Resources -->
	<sec:http pattern="/webapi/**" entry-point-ref="oauthAuthenticationEntryPoint" 
								create-session="never" access-decision-manager-ref="accessDecisionManager" xmlns="http://www.springframework.org/schema/security">
		<sec:anonymous enabled="false"/>
		<csrf disabled="true"/>
		<sec:intercept-url pattern="/webapi/**"  access="hasRole('ROLE_USER')"/>
		<!-- <csrf disabled="true"/> -->
		<sec:custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER"/>
		<sec:access-denied-handler ref="oauthAccessDeniedHandler"/>
	</sec:http>
	
	<bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<!-- <property name="realmName" value="dstest"/> -->
	</bean>
	
	<bean id="clientAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<!-- <property name="realmName" value="dstest/client" /> -->
		<property name="typeName" value="Basic" />
	</bean>
	
	<bean id="oauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
	
	<bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>
	
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased" xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter"/>
				<bean class="org.springframework.security.access.vote.RoleVoter"/>
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
				<bean class="org.springframework.security.web.access.expression.WebExpressionVoter" />
			</list>
		</constructor-arg>
	</bean>
	
	<!--  For Basic Authentication -->
	<!-- <http auto-config="true">
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
		<csrf disabled="true"/>
	</http> --> 
	
	<!-- Authentication Config file 
 	<authentication-manager>
 		<authentication-provider>
 			<user-service>
 				<user name="alka" password="password1" authorities="ROLE_USER"/>
 			</user-service>
 		</authentication-provider>
 	</authentication-manager> -->
 	
 	<!-- Authentication Config file -->
 	<sec:authentication-manager id="clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
 		<sec:authentication-provider user-service-ref="clientDetailsUserService"/>
 	</sec:authentication-manager>
 	
 	<sec:authentication-manager alias="authenticationManager" id="authenticationManager" xmlns="http://www.springframework.org/schema/security">
 		<sec:authentication-provider>
 			<sec:user-service id="userDetailsService">
 				<sec:user name="alka" password="password1" authorities="ROLE_USER" />
 			</sec:user-service>
 		</sec:authentication-provider>
 	</sec:authentication-manager>
 	
 	<bean id="clientDetailsUserService" 
 				class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetails"/>
	</bean>
	
	
	<!-- Token Store -->
	<bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>
	
	<bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore"/>
		<property name="supportRefreshToken" value="true"/>
		<property name="clientDetailsService" ref="clientDetails"/>
		<property name="accessTokenValiditySeconds" value="10"/>
	</bean>
	
	<bean id="userApprovalHandler" 
				class="org.springframework.security.oauth2.provider.approval.TokenStoreUserApprovalHandler">
	 	<property name="tokenStore" ref="tokenStore"/>
	 	<property name="requestFactory" ref="requestFactory"/>
	</bean>
	
	<bean id="requestFactory" class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
		<constructor-arg ref="clientDetails"/>
	</bean>
	
	<!-- Token Management -->
	<oauth:authorization-server client-details-service-ref="clientDetails" token-services-ref="tokenServices"
									user-approval-handler-ref="userApprovalHandler">
		<oauth:authorization-code/>
		<oauth:implicit/>
		<oauth:refresh-token/>
		<oauth:client-credentials/>
		<oauth:password authentication-manager-ref=""/>
	</oauth:authorization-server>
	
	<oauth:resource-server id="resourceServerFilter" resource-id="dstest" token-services-ref="tokenServices"/>
	
	<!-- Client Definition -->
	<oauth:client-details-service id="clientDetails">
		<oauth:client client-id="my-trusted-client" 
						authorized-grant-types="password,authorization_code,refresh_token,implicit,redirect"
						authorities="ROLE_USER,ROLE_CLIENT,ROLE_TRUSTED_CLIENT"
						redirect-uri="/web"
						scope="read,write,trust"
						access-token-validity="30"
						refresh-token-validity="2400"/>
	</oauth:client-details-service>
	
	<sec:global-method-security pre-post-annotations="enabled" proxy-target-class="true"> 
		<sec:expression-handler ref="oauthExpressionHandler"/>
	</sec:global-method-security>
	
	<oauth:expression-handler id="oauthExpressionHandler"/>
	<oauth:web-expression-handler id="oauthWebExpressionHandler"/>	
	
</beans>